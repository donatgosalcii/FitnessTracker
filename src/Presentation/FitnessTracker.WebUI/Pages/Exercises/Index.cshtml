@page
@model FitnessTracker.WebUI.Pages.Exercises.IndexModel
@{
    ViewData["Title"] = "Exercises";
    var isAdmin = User.IsInRole("Admin");
}

<h1>@ViewData["Title"]</h1>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessagePage"] != null) 
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessagePage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


@if (isAdmin)
{
    <p>
        <a asp-page="Create" class="btn btn-primary mb-3">
            <i class="fas fa-plus"></i> Create New Exercise
        </a> @* TODO: Create Pages/Exercises/Create.cshtml & .cs *@
    </p>
}

@if (Model.Exercises.Any())
{
    <table class="table table-striped table-hover">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Exercises[0].Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Exercises[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Exercises[0].Description)
                </th>
                <th>
                    Muscle Groups
                </th>
                @if (isAdmin)
                {
                    <th class="text-end">Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Exercises)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @if (item.MuscleGroups != null && item.MuscleGroups.Any())
                        {
                            @string.Join(", ", item.MuscleGroups.Select(mg => mg.Name))
                        }
                        else
                        {
                            <text>N/A</text>
                        }
                    </td>
                    @if (isAdmin)
                    {
                        <td class="text-end">
                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                                <i class="fas fa-edit"></i> Edit
                            </a> 
                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                <i class="fas fa-trash-alt"></i> Delete
                            </a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    @if (string.IsNullOrEmpty(Model.ErrorMessage) && TempData["ErrorMessagePage"] == null)
    {
        <div class="alert alert-info mt-3">
            No exercises found.
            @if (isAdmin)
            {
                <span>Click "Create New Exercise" to add one.</span>
            }
        </div>
    }
}

